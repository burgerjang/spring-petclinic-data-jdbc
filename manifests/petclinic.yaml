---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: petclinic
  name: petclinic
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: petclinic
status:
  loadBalancer: {}

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: petclinic-hpa
  labels:
    io.kompose.service: petclinic
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1beta2
    kind: Deployment
    name: petclinic
  targetCPUUtilizationPercentage: 80
    
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: petclinic
  name: petclinic
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: petclinic
    spec:
      containers:
      - env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://mysql-db:3306/petclinic?autoReconnect=true&useSSL=false
        image: rozen88/spring-petclinic-data-jdbc
        imagePullPolicy: Always
        name: petclinic
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
          
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        ports:
        - containerPort: 8080
        resources: {}

      terminationGracePeriodSeconds: 30
      restartPolicy: Always
status: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: petclinic
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: petclinic-127.0.0.1.nip.io
    http:
      paths:
      - backend:
          serviceName: petclinic
          servicePort: 8080
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-db
  name: mysql-db
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: mysql-db
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    io.kompose.service: mysql-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-db
  name: mysql-db
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mysql-db
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: petclinic
        - name: MYSQL_ROOT_PASSWORD
          value: petclinic
        image: mysql:5.7
        name: mysql-db
        ports:
        - containerPort: 3306
        resources: {}
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      restartPolicy: Always
status: {}  